ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  host: eoapi.develop.eoepca.org
  tls:
    enabled: true
    certManager: false
    secretName: eoapi-tls

db:
  enabled: false

postgrescluster:
  enabled: true
  postgresVersion: 16
  postGISVersion: 3.4
  pgBouncerReplicas: 1
  monitoring: false
  instances:
  - name: eoapi
    replicas: 1
    dataVolumeClaimSpec:
      storageClassName: managed-nfs-storage-retain
      accessModes:
      - "ReadWriteMany"
      resources:
        requests:
          storage: 1Gi
  backupsStorageClassName: managed-nfs-storage-retain
  nfsCustom:  # we added a manual option to our postgresql chart to try and accommodate this b/c it was hardcoded as ReadWriteOnce: https://github.com/developmentseed/eoapi-k8s/pull/147
      - name: repo1
    
pgstacBootstrap:
  enabled: true
  settings:
    envVars:
      KEEP_ALIVE: "false"

raster:
  enabled: true
  settings:
    envVars:
      AWS_S3_ENDPOINT: "eodata.cloudferro.com"
      AWS_ACCESS_KEY_ID: "4SMIGZNCR8LM1LSUY1HU"
      AWS_SECRET_ACCESS_KEY: "MBiw2FOddg3Fs2Rm9NoDy10qufvJ4hzjmlQ1qwzV"
      AWS_VIRTUAL_HOSTING: "FALSE"
    resources:
      requests:
        memory: "3072Mi"
stac:
  enabled: true
  settings:
    envVars:
      ENABLED_EXTENSIONS: "query,sort,fields,pagination,filter,collection_search"
    resources:
      limits:
        cpu: "1280m"
        memory: "1536Mi"
      requests:
        cpu: "512m"
vector:
  enabled: true
  settings:
    resources:
      limits:
        memory: "1536Mi"
      requests:
        memory: "1024Mi"
    envVars:
      # needs to on so we can call /refresh for integration tests
      TIPG_DEBUG: "True"
      TIPG_CATALOG_TTL: "30"
