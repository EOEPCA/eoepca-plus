persistence:
  storageClassName: managed-nfs-storage-retain

data-access:
  global:
    env:
      REGISTRAR_REPLACE: "true"
      CPL_VSIL_CURL_ALLOWED_EXTENSIONS: .TIF,.TIFF,.tif,.tiff,.xml,.jp2,.jpg,.jpeg,.png,.nc
      AWS_ENDPOINT_URL_S3: https://minio.develop.eoepca.org
      AWS_HTTPS: "FALSE"
      startup_scripts:
        - /registrar_pycsw/registrar_pycsw/initialize-collections.sh
      CREODIAS_EODATA_S3_ENDPOINT: "http://eodata.cloudferro.com"
      CREODIAS_EODATA_S3_ACCESS_KEY: "4SMIGZNCR8LM1LSUY1HU"
      CREODIAS_EODATA_S3_ACCESS_SECRET: "MBiw2FOddg3Fs2Rm9NoDy10qufvJ4hzjmlQ1qwzV"
      CREODIAS_EODATA_S3_REGION: "WAW3-2"  # Cloudferro S3 doesn't seem to care about region

    # The data-access relies on the value 'ingress.tls.hosts[0]' to specify the service
    # hostname. So this must be supplied even if the ingress is disabled.
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      hosts:
        - host: data-access.develop.eoepca.org
      tls:
        - hosts:
            - data-access.develop.eoepca.org
          secretName: data-access-tls

    storage:
      data:
        data:
          type: S3
          endpoint_url: "http://eodata.cloudferro.com"
          access_key_id: "4SMIGZNCR8LM1LSUY1HU"
          secret_access_key: "MBiw2FOddg3Fs2Rm9NoDy10qufvJ4hzjmlQ1qwzV"
          region_name: "WAW3-2"  # Cloudferro S3 doesn't seem to care about region
          validate_bucket_name: false
      cache:
        type: S3
        bucket: cache-bucket
        endpoint_url: "https://minio.develop.eoepca.org/cache-bucket"
        host: "minio.develop.eoepca.org"
        access_key_id: eoepca
        secret_access_key: changeme
        region: us-east-1
        region_name: us-east-1

    metadata:
      title: EOEPCA Data Access Service developed by EOX
      abstract: EOEPCA Data Access Service developed by EOX
      header: "EOEPCA Data Access View Server (VS) Client powered by <a href=\"//eox.at\"><img src=\"//eox.at/wp-content/uploads/2017/09/EOX_Logo.svg\" alt=\"EOX\" style=\"height:25px;margin-left:10px\"/></a>"
      url: https://data-access.develop.eoepca.org/ows

  vs:

    renderer:
      replicaCount: 4
      resources:
        requests:
          cpu: 100m
          memory: 300Mi
        limits:
          cpu: 1.5
          memory: 3Gi

    registrar:
      replicaCount: 1
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      config:
        #--------------
        # Default route
        #--------------
        disableDefaultRoute: false
        # Additional backends for the default route
        defaultBackends:
          - path: registrar_pycsw.backend.ItemBackend
            kwargs:
              repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw
              ows_url: https://data-access.develop.eoepca.org/ows
        defaultSuccessQueue: seed_queue
        #----------------
        # Specific routes
        #----------------
        routes:
          collections:
            path: registrar.route.stac.CollectionRoute
            queue: register_collection_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.CollectionBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

          ades:
            path: registrar.route.json.JSONRoute
            queue: register_ades_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.ADESBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

          application:
            path: registrar.route.json.JSONRoute
            queue: register_application_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.CWLBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

          catalogue:
            path: registrar.route.json.JSONRoute
            queue: register_catalogue_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.CatalogueBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

          json:
            path: registrar.route.json.JSONRoute
            queue: register_json_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.JSONBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

          xml:
            path: registrar.route.json.JSONRoute
            queue: register_xml_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.XMLBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

    client:
      replicaCount: 1
      config:
        eoxserverDownloadEnabled: true
        timeDomain:
          - "2002-01-01T00:00:00Z"
          - "customClientDateFuture1"
        displayTimeDomain:
          - "customClientDatePast1"
          - "customClientDateFuture1"
        selectedTimeDomain:
          - "customClientDatePast2"
          - "today"
        customClientDaysPast1: 90
        customClientDaysPast2: 1
        customClientDaysFuture1: 7

    redis:
      master:
        persistence:
          storageClass: managed-nfs-storage-retain

    scheduler:
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
