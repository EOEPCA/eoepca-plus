apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: resource-health-opensearch
  namespace: argocd
spec:
  destination:
    namespace: resource-health-opensearch
    server: https://kubernetes.default.svc
  project: eoepca
  source:
    chart: opensearch
    helm:
      parameters:
      - name: persistence.size
        value: 12Gi
      - name: replicas
        value: "2"
      - name: persistence.enabled
        value: "false"
      - name: sysctl.enabled
        value: "false"
      - name: sysctlInit.enabled
        value: "true"
      values: |      
        extraEnvs:
          - name: DISABLE_INSTALL_DEMO_CONFIG
            value: "true"

        secretMounts:
          - name: certs
            secretName: opensearch-tls-certificate
            path: /usr/share/opensearch/config/esnode

        config:
          opensearch.yml: >
            cluster.name: opensearch-cluster

            network.host: 0.0.0.0

            plugins:
              security:
                nodes_dn:
                  - 'CN=resource-health-opensearch.svc.cluster.local'
                ssl:
                  transport:
                    pemcert_filepath: esnode/tls.crt
                    pemkey_filepath: esnode/tls.key
                    pemtrustedcas_filepath: esnode/ca.crt
                    enforce_hostname_verification: false
                  http:
                    enabled: true
                    pemcert_filepath: esnode/tls.crt
                    pemkey_filepath: esnode/tls.key
                    pemtrustedcas_filepath: esnode/ca.crt
                    clientauth_mode: OPTIONAL
                allow_unsafe_democertificates: false
                allow_default_init_securityindex: true
                # authcz:
                #   admin_dn:
                #     - CN=kirk,OU=client,O=client,L=test,C=de
                audit.type: internal_opensearch
                enable_snapshot_restore_privilege: true
                check_snapshot_restore_write_privileges: true
                restapi:
                  roles_enabled: ["all_access", "security_rest_api_access"]
                system_indices:
                  enabled: true
                  indices:
                    [
                      ".opendistro-alerting-config",
                      ".opendistro-alerting-alert*",
                      ".opendistro-anomaly-results*",
                      ".opendistro-anomaly-detector*",
                      ".opendistro-anomaly-checkpoints",
                      ".opendistro-anomaly-detection-state",
                      ".opendistro-reports-*",
                      ".opendistro-notifications-*",
                      ".opendistro-notebooks",
                      ".opendistro-asynchronous-search-response*",
                    ]

        securityConfig:
          enabled: true
          path: "/usr/share/opensearch/config/opensearch-security"
          config:
            dataComplete: false
            data:
              config.yml: |-

                _meta:
                  type: "config"
                  config_version: 2

                config:
                  dynamic:
                    kibana:
                      multitenancy_enabled: true
                      server_username: 'dashboards-client.resource-health-opensearch.svc.cluster.local'
                      index: '.opensearch-dashboards'
                    do_not_fail_on_forbidden: false

                    http:
                      anonymous_auth_enabled: false
                    authc:
                      basic_internal_auth_domain:
                        description: "Authenticate via HTTP Basic against internal users database"
                        http_enabled: true
                        transport_enabled: true
                        order: 2
                        http_authenticator:
                          type: basic
                          challenge: true
                        authentication_backend:
                          type: intern
                      clientcert_auth_domain:
                        description: "Authenticate via SSL client certificates"
                        http_enabled: true
                        transport_enabled: false
                        order: 1
                        http_authenticator:
                          type: clientcert
                          config:
                            username_attribute: cn
                          challenge: false
                        authentication_backend:
                          type: noop

              internal_users.yml: |-
                _meta:
                  type: "internalusers"
                  config_version: 2

                ## TODO: Remove this user
                sensmetry:
                  hash: "$2y$12$RnLnOIT2j7YQzyn9O8BRruOFcPbvqkSZVmT0kqioJCcOsK.ZIuVwG"
                  reserved: true
                  backend_roles:
                  - "admin"
                  description: "Temporary admin user (Delete me)"

              # roles.yml: |-

              roles_mapping.yml: |-
                _meta:
                  type: "rolesmapping"
                  config_version: 2

                all_access:
                  reserved: false
                  backend_roles:
                  - "admin"
                  users:
                  - "sensmetry"
                  - "otel-collector.resource-health-opensearch.svc.cluster.local"
                  description: "Maps admin to all_access"

                kibana_server:
                  reserved: true
                  hidden: false
                  backend_roles: []
                  hosts: []
                  users:
                  - "dashboards-client.resource-health-opensearch.svc.cluster.local"
                  and_backend_roles: []


              # action_groups.yml: |-
              # tenants.yml: |-
              
    repoURL: https://opensearch-project.github.io/helm-charts/
    targetRevision: 2.21.0
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
